{"is_source_file": true, "format": "JavaScript", "description": "This file defines an Axios API client configuration and several API modules for interacting with backend endpoints related to authentication, animals, devices, telemetry, alerts, analytics, and dashboard data. It includes JWT token management via an interceptor to attach tokens from localStorage.", "external_files": ["axios"], "external_methods": ["axios.create", "axios.post", "axios.get", "axios.put", "axios.delete"], "published": ["AuthAPI", "AnimalsAPI", "DevicesAPI", "TelemetryAPI", "AlertsAPI", "AnalyticsAPI", "DashboardAPI", "api"], "classes": [], "methods": [{"name": "login", "description": "Performs user authentication via email and password, stores JWT token and returns user data."}, {"name": "register", "description": "Registers a new user with provided payload."}, {"name": "list", "description": "Retrieves list of animals."}, {"name": "get", "description": "Retrieves animal data by ID."}, {"name": "create", "description": "Creates a new animal record."}, {"name": "update", "description": "Updates an existing animal record by ID."}, {"name": "remove", "description": "Deletes an animal record by ID."}, {"name": "list", "description": "Retrieves list of devices."}, {"name": "get", "description": "Retrieves device data by ID."}, {"name": "create", "description": "Creates a new device record."}, {"name": "update", "description": "Updates an existing device record by ID."}, {"name": "post", "description": "Submits telemetry data."}, {"name": "query", "description": "Retrieves telemetry data based on query parameters."}, {"name": "list", "description": "Lists alerts."}, {"name": "predictMovement", "description": "Predicts movement for a given animal over a specified window."}, {"name": "get", "description": "Retrieves dashboard data."}], "calls": ["api.post('/auth/login', { email, password })", "api.post('/auth/register', payload)", "api.get('/animals')", "api.get(`/animals/${id}`)", "api.post('/animals', payload)", "api.put(`/animals/${id}`, payload)", "api.delete(`/animals/${id}`)", "api.get('/devices')", "api.get(`/devices/${id}`)", "api.post('/devices', payload)", "api.put(`/devices/${id}`, payload)", "api.post('/telemetry', payload)", "api.get('/telemetry', { params })", "api.get('/alerts')", "api.get('/analytics/movement-predict', { params: { animal_id, window } })", "api.get('/dashboard')"], "search-terms": ["Axios JWT interceptor", "React environment variable API URL", "AnimalsAPI CRUD", "Telemetry data submission", "JWT token retrieval from localStorage", "API endpoint definitions"], "state": 2, "file_id": 17, "knowledge_revision": 40, "git_revision": "", "ctags": [{"_type": "tag", "name": "API_BASE_URL", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http:\\/\\/localhost:8000';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "AlertsAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const AlertsAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "AnalyticsAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const AnalyticsAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "AnimalsAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const AnimalsAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "AuthAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const AuthAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "DashboardAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const DashboardAPI = {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "DevicesAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const DevicesAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "TelemetryAPI", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^export const TelemetryAPI = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^const api = axios.create({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  list: async () => (await api.get('\\/alerts')).data$/", "language": "JavaScript", "kind": "property", "scope": "AlertsAPI", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  list: async () => (await api.get('\\/animals')).data,$/", "language": "JavaScript", "kind": "property", "scope": "AnimalsAPI", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  list: async () => (await api.get('\\/devices')).data,$/", "language": "JavaScript", "kind": "property", "scope": "DevicesAPI", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  login: async (email, password) => {$/", "language": "JavaScript", "kind": "property", "scope": "AuthAPI", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  post: async (payload) => (await api.post('\\/telemetry', payload)).data,$/", "language": "JavaScript", "kind": "property", "scope": "TelemetryAPI", "scopeKind": "class"}, {"_type": "tag", "name": "predictMovement", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  predictMovement: async (animal_id, window) => (await api.get('\\/analytics\\/movement-predict', /", "language": "JavaScript", "kind": "property", "scope": "AnalyticsAPI", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  query: async (params) => (await api.get('\\/telemetry', { params })).data,$/", "language": "JavaScript", "kind": "property", "scope": "TelemetryAPI", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/react-frontend-application-20493-20521/react_frontend/src/api/client.js", "pattern": "/^  register: async (payload) => {$/", "language": "JavaScript", "kind": "constant"}], "hash": "f3aac57174ad6fa5e48e9be19a930bc1", "format-version": 4, "code-base-name": "react_frontend", "filename": "react_frontend/src/api/client.js", "fields": [{"name": "list: async () => (await api.get('\\/alerts')).data", "scope": "AlertsAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "list: async () => (await api.get('\\/animals')).data,", "scope": "AnimalsAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "list: async () => (await api.get('\\/devices')).data,", "scope": "DevicesAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "login: async (email, password) => {", "scope": "AuthAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "post: async (payload) => (await api.post('\\/telemetry', payload)).data,", "scope": "TelemetryAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "predictMovement: async (animal_id, window) => (await api.get('\\/analytics\\/movement-predict', /", "scope": "AnalyticsAPI", "scopeKind": "class", "description": "unavailable"}, {"name": "query: async (params) => (await api.get('\\/telemetry', { params })).data,", "scope": "TelemetryAPI", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"40": ""}]}